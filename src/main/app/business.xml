<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:jdbc-ee="http://www.mulesoft.org/schema/mule/ee/jdbc" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/ee/jdbc http://www.mulesoft.org/schema/mule/ee/jdbc/current/mule-jdbc-ee.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
    <data-mapper:config name="csv2taxpayer_grf" transformationGraphPath="csv2taxpayer.grf" doc:name="DataMapper"/>
    <data-mapper:config name="taxpayer2simpletaxrequest_grf" transformationGraphPath="taxpayer2simpletaxrequest.grf" doc:name="DataMapper"/>
    <data-mapper:config name="taxpayer2advancedtaxrequest_grf" transformationGraphPath="taxpayer2advancedtaxrequest.grf" doc:name="DataMapper"/>
    <data-mapper:config name="taxpayerinformation2result_grf" transformationGraphPath="taxpayerinformation2result.grf" doc:name="taxpayerinformation2result_grf"/>
    <flow name="file-loadTaxPayers" doc:name="file-loadTaxPayers">
        <file:inbound-endpoint path="./_inputs" moveToDirectory="./_data" responseTimeout="10000" doc:name="_inputs/*.csv">
            <file:filename-regex-filter pattern=".*\.csv$" caseSensitive="true"/>
        </file:inbound-endpoint>
        <data-mapper:transform config-ref="csv2taxpayer_grf" doc:name="-&gt; List&lt;TaxPayer&gt;"/>
        <set-variable variableName="cpt" value="0" doc:name="cpt = 0"/>
        <collection-splitter doc:name="split"/>
        <set-variable variableName="cpt" value="#[(int) flowVars['cpt'] + 1]" doc:name="cpt++"/>
        <vm:outbound-endpoint exchange-pattern="request-response" path="/vm/internal/handleATaxPayer" doc:name="handleATaxPayer"/>
        <collection-aggregator failOnTimeout="true" doc:name="aggregate"/>
        <logger message="Handled TaxPayers: #[flowVars['cpt']]" level="INFO" doc:name="Logger"/>
        <json:object-to-json-transformer doc:name="-&gt; JSON"/>
        <file:outbound-endpoint path="./_outputs" outputPattern="results.json" responseTimeout="10000" doc:name="_outputs/results.json"/>
    </flow>
    <flow name="vm-HandleATaxPayer" doc:name="vm-HandleATaxPayer">
        <vm:inbound-endpoint exchange-pattern="request-response" path="/vm/internal/handleATaxPayer" doc:name="handleATaxPayer"/>
        <logger message="Handling #[message.payload.lastName] / #[message.payload.firstName] / #[message.payload.identifier]" level="INFO" doc:name="Logger"/>
        <set-variable variableName="current" value="#[message.payload]" doc:name="current = this"/>
        <choice doc:name="Choice">
            <when expression="#[message.payload.assets.wealth &lt;15000]">
                <logger message="Processing #[message.payload.lastName] with SIMPLE" level="INFO" doc:name="log-SIMPLE"/>
                <flow-ref name="sub-handeWithSimple" doc:name="handleWithSimple"/>
            </when>
            <otherwise>
                <logger message="Processing #[message.payload.lastName] with COMPLEX" level="INFO" doc:name="log-COMPLEX"/>
                <flow-ref name="sub-handleWithComplex" doc:name="handleWithComplex"/>
            </otherwise>
        </choice>
        <scripting:component doc:name="-&gt; TaxPayerInformation">
            <scripting:script engine="Groovy"><![CDATA[def tpi = new internal.data.TaxPayerInformation();

tpi.setLastName(flowVars['current'].lastName);
tpi.setFirstName(flowVars['current'].firstName);
tpi.setTaxAmount(message.payload.amount.trunc());

return tpi;]]></scripting:script>
        </scripting:component>
        <flow-ref name="sub-post-processing" doc:name="post-processing"/>
    </flow>
    <flow name="vm-ConsultTaxPayer" doc:name="vm-ConsultTaxPayer">
        <vm:inbound-endpoint exchange-pattern="request-response" path="/vm/int/ConsultTaxPayer" doc:name="consultTaxPayer"/>
        <ee:cache doc:name="Cache">
            <logger message="Consulting database / #[message.payload]" level="INFO" doc:name="Logger"/>
            <jdbc-ee:outbound-endpoint exchange-pattern="request-response" queryKey="get" queryTimeout="-1" connector-ref="DatabaseConnector" doc:name="SELECT FROM RESULTS">
                <jdbc-ee:query key="get" value="SELECT * FROM RESULTS WHERE person_id = #[payload:]"/>
            </jdbc-ee:outbound-endpoint>
            <scripting:component doc:name="-&gt; TaxPayerInformation">
                <scripting:script engine="Groovy"><![CDATA[if (message.payload == null || message.payload.size() == 0)
	throw new RuntimeException("No data!");

def raw = message.payload.get(0)

def info = new internal.data.TaxPayerInformation();
info.setFirstName(raw['FIRST_NAME']);
info.setLastName(raw['LAST_NAME']);
info.setTaxAmount((float) raw['TAX_VALUE']);

return info;]]></scripting:script>
            </scripting:component>
        </ee:cache>
    </flow>
    <sub-flow name="sub-handeWithSimple" doc:name="sub-handeWithSimple">
        <data-mapper:transform config-ref="taxpayer2simpletaxrequest_grf" doc:name="-&gt; SimpleTaxRequest"/>
        <enricher target="#[message.payload.id]" doc:name="Message Enricher">
            <vm:outbound-endpoint exchange-pattern="request-response" path="/vm/internal/client/idGen" doc:name="client/idGen"/>
        </enricher>
        <vm:outbound-endpoint exchange-pattern="request-response" path="/vm/internal/client/taxComputer/simple" doc:name="client/taxComputer/simple"/>
    </sub-flow>
    <sub-flow name="sub-handleWithComplex" doc:name="sub-handleWithComplex">
        <data-mapper:transform config-ref="taxpayer2advancedtaxrequest_grf" doc:name="-&gt; AdvancedTaxRequest"/>
        <enricher target="#[message.payload.id]" doc:name="Message Enricher">
            <vm:outbound-endpoint exchange-pattern="request-response" path="/vm/internal/client/idGen" doc:name="client/idGen"/>
        </enricher>
        <vm:outbound-endpoint exchange-pattern="request-response" path="/vm/internal/client/taxComputer/complex" doc:name="client/taxComputer/complex"/>
    </sub-flow>
    <sub-flow name="sub-post-processing" doc:name="sub-post-processing">
        <set-variable variableName="result" value="#[message.payload]" doc:name="result = msg"/>
        <all doc:name="All">
            <processor-chain>
                <set-variable variableName="fileName" value="letter-#[message.payload.lastName]-#[message.payload.firstName].data.json" doc:name="fileName"/>
                <json:object-to-json-transformer doc:name="Object to JSON"/>
                <file:outbound-endpoint path="./_outputs/posten" outputPattern="#[flowVars['fileName']]" responseTimeout="10000" doc:name="send letter"/>
            </processor-chain>
            <processor-chain>
                <data-mapper:transform config-ref="taxpayerinformation2result_grf" doc:name="-&gt; query"/>
                <enricher target="#[message.payload['id']]" doc:name="Message Enricher">
                    <expression-transformer expression="#[flowVars['current'].identifier]" doc:name="add id"/>
                </enricher>
                <jdbc-ee:outbound-endpoint exchange-pattern="one-way" queryKey="add" queryTimeout="-1" connector-ref="DatabaseConnector" doc:name="INSERT INTO RESULTS">
                    <jdbc-ee:query key="add" value="INSERT INTO RESULTS VALUES (#[message.payload.id], #[message.payload.last], #[message.payload.first], #[message.payload.amount])"/>
                </jdbc-ee:outbound-endpoint>
            </processor-chain>
        </all>
        <expression-transformer expression="#[flowVars['result']]" doc:name="reply result"/>
    </sub-flow>
</mule>
